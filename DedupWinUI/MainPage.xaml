<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="DedupWinUI.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DedupWinUI"
    xmlns:vm="using:DedupWinUI.ViewModels"
    xmlns:conv="using:DedupWinUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:models="using:Services.Models" 
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Grid>
        <Grid.Resources>
            <Style TargetType="FontIcon">
                <Setter Property="FontFamily" Value="Segoe Fluent Icons"/>
            </Style>
            <Style TargetType="TextBlock" x:Name="Label">
                <Setter Property="Margin" Value="0,0,4,0"/>
            </Style>
            <ControlTemplate x:Key="HorizontalGridSplitterTemplate" TargetType="controls:GridSplitter">
                <Grid Background="{ThemeResource SystemAltMediumLowColor}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="&#xE784;" FontFamily="Segoe Fluent Icons"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="VerticalGridSplitterTemplate" TargetType="controls:GridSplitter">
                <Grid Background="{ThemeResource SystemAltMediumLowColor}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="&#xE76F;" FontFamily="Segoe Fluent Icons"/>
                </Grid>
            </ControlTemplate>
            
            <DataTemplate x:Key="GridViewItemDataTemplate" x:DataType="models:ImageModel">
                <GridViewItem>
                    <Grid Width="192">
                        <Image x:Name="ItemImage" Height="192" Width="192" Stretch="Uniform"
                               Source="{x:Bind ThumbnailSource}"/>
                        <Border Background="Gray" Opacity="0.7"  VerticalAlignment="Bottom">
                            <TextBlock Text="{x:Bind FileName}" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                        </Border>
                    </Grid>
                </GridViewItem>
            </DataTemplate>
            
            <DataTemplate x:Key="SuperimposedIconsTemplate">
                <Grid>
                    <FontIcon Glyph="&#xE10F;" />
                    <!-- Example icon 1 -->
                    <FontIcon Glyph="&#xE115;" />
                    <!-- Example icon 2 -->
                </Grid>
            </DataTemplate>
            
            <conv:ImageSourceConverter x:Key="ImageSourceConverter"/>
            <conv:PathToFileNameConverter x:Key="PathToFileNameConverter"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <!-- command bar -->
            <RowDefinition Height="Auto"/>
            <!-- images content -->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!-- gallery -->
            <ColumnDefinition/>
            <!-- grid splitter -->
            <ColumnDefinition Width="Auto"/>
            <!-- details and analysis -->
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <CommandBar x:Name="ItemsViewCommandBar" DefaultLabelPosition="Right" VerticalContentAlignment="Center">
            <AppBarElementContainer>
                <ToggleSplitButton x:Name="FolderFilterButton"
                                   IsChecked="{x:Bind ViewModel.FolderFilterApplied, Mode=TwoWay}"
                                   Command="{x:Bind ViewModel.FilterImagesCommand}">
                    <ToggleSplitButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon x:Name="FilterIcon" Symbol="Filter"/>
                            <TextBlock Text="Filter" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </ToggleSplitButton.Content>
                    
                    <ToggleSplitButton.Flyout>
                        <Flyout>
                            <StackPanel>
                                <controls:UniformGrid Columns="2">
                                    <Button Grid.Column="0" HorizontalAlignment="Stretch"
                                            Command="{x:Bind ViewModel.ApplyFilterCommand}">
                                        <Button.Content>
                                            <controls:DockPanel LastChildFill="True">
                                                <SymbolIcon Symbol="Accept" Foreground="Green"/>
                                                <TextBlock Text="Apply" Margin="8,0,0,0"/>
                                            </controls:DockPanel>
                                        </Button.Content>
                                    </Button>
                                    <Button Grid.Column="1" HorizontalAlignment="Stretch"
                                            Command="{x:Bind ViewModel.ClearFilterCommand}">
                                        <Button.Content>
                                            <controls:DockPanel LastChildFill="True">
                                                <SymbolIcon Symbol="Cancel"/>
                                                <TextBlock Text="Clear" Margin="8,0,0,0"/>
                                            </controls:DockPanel>
                                        </Button.Content>
                                    </Button>
                                </controls:UniformGrid>
                                <ScrollViewer MaxHeight="400">
                                    <TreeView x:Name="FolderFilterTree"
                                              ItemsSource="{x:Bind ViewModel.RelativePathsTree.Children}">
                                        <TreeView.ItemTemplate>
                                            <DataTemplate x:DataType="vm:TreeNodeViewModel">
                                                <TreeViewItem ItemsSource="{x:Bind Children}">
                                                    <StackPanel Orientation="Horizontal">
                                                        <CheckBox
                                                            Content="{x:Bind Name}"
                                                            IsChecked="{x:Bind IsChecked, Mode=TwoWay}"/>
                                                    </StackPanel>
                                                </TreeViewItem>
                                            </DataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                </ScrollViewer>
                            </StackPanel>
                        </Flyout>
                    </ToggleSplitButton.Flyout>

                </ToggleSplitButton>
            </AppBarElementContainer>
            <AppBarSeparator/>
            <AppBarButton Label="Scan" Command="{x:Bind ViewModel.ScanFilesCommand}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE777;"/>
                </AppBarButton.Icon>
            </AppBarButton>
            
            <!--<AppBarButton Label="Zoom Out" Command="{x:Bind ViewModel.ZoomOutCommand}" Icon="ZoomOut" />
            <AppBarElementContainer VerticalContentAlignment="Center">
                <Slider x:Name="ScaleSlider" Minimum="10" Maximum="200" StepFrequency="10"  MinWidth="100"
                        Value="{x:Bind ViewModel.SourceImageScale, Mode=TwoWay}"/>
            </AppBarElementContainer>
            <AppBarButton Label="Zoom In" Command="{x:Bind ViewModel.ZoomInCommand}" Icon="ZoomIn"/>-->

            <AppBarSeparator/>

            <AppBarButton x:Name="DeleteSourceButton" Label="Delete" Icon="Cancel" Foreground="Red"
                          Command="{x:Bind ViewModel.DeleteFilesCommand}" 
                          CommandParameter="{x:Bind ViewModel.SelectedModels, Mode=TwoWay}"/>
            <AppBarButton x:Name="RecycleBinButton" Label="Recycle bin" Icon="Delete"
                          Click="NavigationButton_Click" CommandParameter="RecycleBinPage"/>
            
            <CommandBar.Content>
                <TextBlock Text="{x:Bind ViewModel.StatusText, Mode=OneWay}" Margin="8,0"/>
            </CommandBar.Content>
        </CommandBar>
        
        <GridView x:Name="ItemsGridView" Grid.Row="1" SelectionMode="Extended" CanDragItems="True"
                    ItemsSource="{x:Bind ViewModel.FilteredImages, Mode=OneWay}"
                    ItemTemplate="{StaticResource GridViewItemDataTemplate}"
                    SelectedItem="{x:Bind ViewModel.SelectedModel, Mode=TwoWay}"
                    KeyUp="ItemsGridView_KeyUp"
                    SelectionChanged="ItemsGridView_SelectionChanged" 
                    />
        <controls:GridSplitter Grid.Column="1" Grid.Row="1" Width="8" ResizeBehavior="BasedOnAlignment" ResizeDirection="Columns"
                               Template="{StaticResource HorizontalGridSplitterTemplate}"/>
        <CommandBar x:Name="ItemDetailsCommandBar" Grid.Column="2" DefaultLabelPosition="Right" VerticalContentAlignment="Center">

            <AppBarElementContainer>
                <SplitButton x:Name="GetSimilarImages" 
             Loaded="GetSimilarImages_Loaded"
             Command="{x:Bind ViewModel.GetSimilarImagesCommand}">
                    <SplitButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter x:Name="SelectedIcon" />
                            <TextBlock x:Name="SelectedText" Margin="5,0,0,0" />
                        </StackPanel>
                    </SplitButton.Content>
                    <SplitButton.Flyout>
                        <MenuFlyout x:Name="GetSimilarImagesFlyout">
                            <MenuFlyoutItem Text="Get similar from folder" Icon="BrowsePhotos"
                            Command="{x:Bind ViewModel.GetSimilarImagesCommand}"
                            CommandParameter="Folder"
                            Click="MenuFlyoutItem_ScanSimilar_Click">
                            </MenuFlyoutItem>
                            <MenuFlyoutItem Text="Get similar from repo" Icon="BrowsePhotos"
                            Command="{x:Bind ViewModel.GetSimilarImagesCommand}"
                            CommandParameter="Repo"
                            Click="MenuFlyoutItem_ScanSimilar_Click"/>
                        </MenuFlyout>
                    </SplitButton.Flyout>
                </SplitButton>
            </AppBarElementContainer>
            <AppBarSeparator/>

            <AppBarButton Label="Zoom Out" Command="{x:Bind ViewModel.ZoomOutCommand}" Icon="ZoomOut" />
            <AppBarElementContainer VerticalContentAlignment="Center">
                <Slider x:Name="ScaleSlider" Minimum="10" Maximum="200" StepFrequency="10"  MinWidth="100"
                        Value="{x:Bind ViewModel.SourceImageScale, Mode=TwoWay}"/>
            </AppBarElementContainer>
            <AppBarButton Label="Zoom In" Command="{x:Bind ViewModel.ZoomInCommand}" Icon="ZoomIn"/>

            <AppBarSeparator/>
            
            <AppBarButton x:Name="SettingsButton" Label="Settings" Icon="Setting"
          Click="NavigationButton_Click" CommandParameter="SettingsPage"/>

            <!--<CommandBar.Content>
                <TextBlock Text="{x:Bind ViewModel.StatusText, Mode=OneWay}" Margin="8,0"/>
            </CommandBar.Content>-->
        </CommandBar>
        <Grid x:Name="Details" Grid.Column="2" Grid.Row="1">
            <Grid.RowDefinitions>
                <!-- selected image data -->
                <RowDefinition Height="*"/>
                <!-- gridsplitter -->
                <RowDefinition Height="Auto"/>
                <!-- similar images view -->
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ScrollViewer>
                <Grid x:Name="DetailsView"  Visibility="{x:Bind ViewModel.DetailsViewVisibility, Mode=OneWay}"
                      VerticalAlignment="Top" HorizontalAlignment="Left">
                    <Grid.Resources>
                        <conv:FileSizeConverter x:Key="FileSizeConverter"/>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <!-- selected image details-->
                    <controls:DockPanel x:Name="SelectedImageView" LastChildFill="True">
                        <ScrollViewer controls:DockPanel.Dock="Top">
                            <Image x:Name="SelectedImage"
                                   Source="{x:Bind ViewModel.SelectedViewModel.Image, Mode=OneWay}" 
                                   Scale="{x:Bind ViewModel.SourceImageViewboxScale, Mode=OneWay}"
                                   Stretch="Uniform"/>
                        </ScrollViewer>

                        <Grid x:Name="SelectedImageInfo" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Directory: " Grid.Row="0" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="File: " Grid.Row="1" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="W x H: " Grid.Row="2" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="Size: "  Grid.Row="3" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="Created: "  Grid.Row="4" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="Thumbnails:"  Grid.Row="5" Grid.Column="0" Style="{StaticResource Label}"/>

                            <TextBlock Text="{x:Bind ViewModel.SelectedViewModel.Model.RelativePath, Mode=OneWay}" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedViewModel.FileName, Mode=OneWay}" TextWrapping="Wrap" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Grid.Row="2" Grid.Column="1">
                                <Run Text="{x:Bind ViewModel.SelectedViewModel.Dimensions.Width, Mode=OneWay}"/>
                                <Run Text="x"/>
                                <Run Text="{x:Bind ViewModel.SelectedViewModel.Dimensions.Height, Mode=OneWay}"/>
                                <Run Text="px."/>
                            </TextBlock>
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="{x:Bind GetLengthText(ViewModel.SelectedViewModel.Length), Mode=OneWay}"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedViewModel.CreationTime, Mode=OneWay}" Grid.Row="4" Grid.Column="1"/>
                            <!-- small and smaller thumbnail used for image analysis-->
                            <StackPanel Grid.Column="1" Grid.Row="5" Orientation="Horizontal">
                                <Border BorderThickness="1" BorderBrush="{ThemeResource BackButtonForegroundThemeBrush}" Margin="0,1,2,0" VerticalAlignment="Top"
                                        Width="{x:Bind ViewModel.ThumbnailSize}" Height="{x:Bind ViewModel.ThumbnailSize}">
                                    <Image  Source="{x:Bind ViewModel.SelectedViewModel.Thumbnail, Mode=OneWay}" Stretch="None"
                                            HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <Border BorderThickness="1" BorderBrush="{ThemeResource BackButtonForegroundThemeBrush}" Margin="0,1,2,0" VerticalAlignment="Top"
                                        Width="{x:Bind ViewModel.HashImageSize}" Height="{x:Bind ViewModel.HashImageSize}">
                                    <Image Source="{x:Bind ViewModel.SelectedViewModel.Model.ImageHashSource, Mode=OneWay}"  Stretch="None"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </StackPanel>
                        </Grid>
                    </controls:DockPanel>
                    
                    <!-- selected similar image details -->
                    <controls:DockPanel x:Name="SelectedSimilarView" Grid.Column="2" LastChildFill="True"
                                        Visibility="{x:Bind ViewModel.SelectedSimilarViewVisibility, Mode=OneWay}" >
                        <ScrollViewer controls:DockPanel.Dock="Top">
                            <Image x:Name="SimilarImage"
                                   Source="{x:Bind ViewModel.SelectedSimilarViewModel.Image, Mode=OneWay}"
                                   Scale="{x:Bind ViewModel.SourceImageViewboxScale, Mode=OneWay}"
                                   Stretch="UniformToFill"/>
                        </ScrollViewer>
                        <Grid x:Name="SelectedSimilarImageInfo" VerticalAlignment="Top" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Directory: " Grid.Row="0" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="File: " Grid.Row="1" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="W x H: " Grid.Row="2" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="Size: "  Grid.Row="3" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="Created: "  Grid.Row="4" Grid.Column="0" Style="{StaticResource Label}"/>
                            <TextBlock Text="Thumbnails:"  Grid.Row="5" Grid.Column="0" Style="{StaticResource Label}"/>

                            <TextBlock Text="{x:Bind ViewModel.SelectedSimilarViewModel.Model.RelativePath, Mode=OneWay}" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedSimilarViewModel.FileName, Mode=OneWay}" TextWrapping="Wrap" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Grid.Row="2" Grid.Column="1">
                                <Run Text="{x:Bind ViewModel.SelectedSimilarViewModel.Dimensions.Width, Mode=OneWay}"/>
                                <Run Text="x"/>
                                <Run Text="{x:Bind ViewModel.SelectedSimilarViewModel.Dimensions.Height, Mode=OneWay}"/>
                                <Run Text="px."/>
                            </TextBlock>
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="{x:Bind GetLengthText(ViewModel.SelectedSimilarViewModel.Length), Mode=OneWay}"/>
                            <TextBlock Text="{x:Bind ViewModel.SelectedSimilarViewModel.CreationTime, Mode=OneWay}" Grid.Row="4" Grid.Column="1"/>
                            <!-- small and smaller thumbnail used for image analysis-->
                            <StackPanel Grid.Column="1" Grid.Row="5" Orientation="Horizontal">
                                <Border BorderThickness="1" BorderBrush="{ThemeResource BackButtonForegroundThemeBrush}" Margin="0,1,2,0" VerticalAlignment="Top"
                                        Width="{x:Bind ViewModel.ThumbnailSize}" Height="{x:Bind ViewModel.ThumbnailSize}">
                                    <Image  Source="{x:Bind ViewModel.SelectedSimilarViewModel.Thumbnail, Mode=OneWay}" Stretch="None"
                                            HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <Border BorderThickness="1" BorderBrush="{ThemeResource BackButtonForegroundThemeBrush}" Margin="0,1,2,0" VerticalAlignment="Top"
                                        Width="{x:Bind ViewModel.HashImageSize}" Height="{x:Bind ViewModel.HashImageSize}">
                                    <Image Source="{x:Bind ViewModel.SelectedSimilarViewModel.Model.ImageHashSource, Mode=OneWay}"  Stretch="None"
                                            HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </StackPanel>
                         </Grid>
                        
                    </controls:DockPanel>
                </Grid>
            </ScrollViewer>
            <controls:GridSplitter Grid.Row="1" Height="8" ResizeBehavior="BasedOnAlignment" ResizeDirection="Rows"
                       Template="{StaticResource VerticalGridSplitterTemplate}"/>
            <GridView x:Name="SimilarImagesGridView" Grid.Row="2"
                      ItemsSource="{x:Bind ViewModel.SimilarImages, Mode=OneWay}"
                      ItemTemplate="{StaticResource GridViewItemDataTemplate}"
                      SelectedItem="{x:Bind ViewModel.SelectedSimilarModel, Mode=TwoWay}"/>
        </Grid>
        
    </Grid>
</Page>
